def arithmetic_arranger(problems, show_answer=False):
    # Check if there are too many problems
    if len(problems) > 5:
        return "Error: Too many problems."
    
    # Initialize variables
    first_line = ""
    second_line = ""
    separator = ""
    answer_line = ""
    
    # Loop through problems
    for problem in problems:
        # Split problem into operands and operator
        parts = problem.split()
        operand1 = parts[0]
        operator = parts[1]
        operand2 = parts[2]
        
        # Check if operator is valid
        if operator not in ["+", "-"]:
            return "Error: Operator must be '+' or '-'."
        
        # Check if operands contain only digits
        if not operand1.isdigit() or not operand2.isdigit():
            return "Error: Numbers must only contain digits."
        
        # Check if operands are too long
        if len(operand1) > 4 or len(operand2) > 4:
            return "Error: Numbers cannot be more than four digits."
        
        # Determine maximum length of operands
        max_length = max(len(operand1), len(operand2))
        
        # Add padding to operands to make them the same length
        padded_operand1 = operand1.rjust(max_length + 2)
        padded_operand2 = operator + operand2.rjust(max_length + 1)
        padded_separator = "-" * (max_length + 2)
        
        # Add lines to the output
        first_line += padded_operand1 + "    "
        second_line += padded_operand2 + "    "
        separator += padded_separator + "    "
        
        # Calculate answer if needed
        if show_answer:
            if operator == "+":
                answer = str(int(operand1) + int(operand2))
            else:
                answer = str(int(operand1) - int(operand2))
            padded_answer = answer.rjust(max_length + 2)
            answer_line += padded_answer + "    "
    
    # Remove trailing spaces from each line
    first_line = first_line.rstrip()
    second_line = second_line.rstrip()
    separator = separator.rstrip()
    if show_answer:
        answer_line = answer_line.rstrip()
    
    # Combine lines into final output
    arranged_problems = first_line + "\n" + second_line + "\n" + separator
    if show_answer:
        arranged_problems += "\n" + answer_line
    
    return arranged_problems
